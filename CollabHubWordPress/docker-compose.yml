version: '3.8'

services:
  # Base de données MySQL pour WordPress
  mysql:
    image: mysql:8.0
    container_name: collabhub-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress_password
      MYSQL_ROOT_PASSWORD: mysql_root_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - collabhub-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # WordPress Frontend
  wordpress:
    image: wordpress:latest
    container_name: collabhub-wordpress
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress_password
      WORDPRESS_DB_NAME: wordpress
      # Configuration WordPress
      WORDPRESS_TABLE_PREFIX: wp_
      WORDPRESS_DEBUG: 1
      # URLs de l'API backend (externe)
      COLLABHUB_API_BASE_URL: http://host.docker.internal:8080/api/v1
      COLLABHUB_RECRUTEUR_API_URL: http://host.docker.internal:8081/api/v1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html
      - ./theme-files:/var/www/html/wp-content/themes/collabhub
      - ./uploads:/var/www/html/wp-content/uploads
      - ./wp-content-plugins/collabhub-api:/var/www/html/wp-content/plugins/collabhub-api
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - collabhub-network

# Volumes persistants
volumes:
  mysql_data:
    driver: local
  wordpress_data:
    driver: local

# Réseau pour permettre la communication avec l'API externe
networks:
  collabhub-network:
    driver: bridge 